/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/EffectPictogramBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

EffectPictogramBase::EffectPictogramBase()
{
    setWidth(75);
    setHeight(53);
    editingBox.setPosition(0, 0, 75, 49);
    editingBox.setColor(touchgfx::Color::getColorFromRGB(89, 89, 89));
    editingBox.setVisible(false);
    add(editingBox);

    selectingBox.setPosition(0, 0, 75, 54);
    selectingBox.setOrigin(0.0f, 0.0f);
    selectingBox.setScale(1.0f, 1.0f);
    selectingBox.setAngle(0.0f);
    selectingBoxPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    selectingBox.setPainter(selectingBoxPainter);
    const touchgfx::AbstractShape::ShapePoint<float> selectingBoxPoints[8] = { { 0.0f, 0.0f }, { 75.0f, 0.0f }, { 75.0f, 5.0f }, { 5.0f, 5.0f }, { 5.0f, 48.0f }, { 75.0f, 48.0f }, { 75.0f, 53.0f }, { 0.0f, 53.0f } };
    selectingBox.setShape(selectingBoxPoints);
    selectingBox.setVisible(false);
    add(selectingBox);

    pictRegular.setXY(20, 8);
    pictRegular.setBitmap(touchgfx::Bitmap(BITMAP_EMPTYPICT_ID));
    add(pictRegular);

    pictEditing.setXY(20, 8);
    pictEditing.setBitmap(touchgfx::Bitmap(BITMAP_EMPTYSELECTEDPICT_ID));
    pictEditing.setVisible(false);
    add(pictEditing);
}

EffectPictogramBase::~EffectPictogramBase()
{

}

void EffectPictogramBase::initialize()
{

}
